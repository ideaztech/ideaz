<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSetContainersLookup" targetNamespace="http://tempuri.org/DataSetContainersLookup.xsd" xmlns:mstns="http://tempuri.org/DataSetContainersLookup.xsd" xmlns="http://tempuri.org/DataSetContainersLookup.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="WsirDbConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="WsirDbConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Solum.Properties.Settings.GlobalReference.Default.WsirDbConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="sol_ContainersTableAdapter" GeneratorDataComponentClassName="sol_ContainersTableAdapter" Name="sol_Containers" UserDataComponentName="sol_ContainersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="WsirDbConnectionString (Settings)" DbObjectName="Solum.dbo.sol_Containers_SelectAllLookup" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[sol_Containers] WHERE (([ContainerID] = @Original_ContainerID) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContainerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContainerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[sol_Containers] ([Description]) VALUES (@Description);
SELECT ContainerID, Description FROM sol_Containers WHERE (ContainerID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>sol_Containers_SelectAllLookup</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[sol_Containers] SET [Description] = @Description WHERE (([ContainerID] = @Original_ContainerID) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)));
SELECT ContainerID, Description FROM sol_Containers WHERE (ContainerID = @ContainerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContainerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContainerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ContainerID" ColumnName="ContainerID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ContainerID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ContainerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ContainerID" DataSetColumn="ContainerID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="ContainerTypeID" DataSetColumn="ContainerTypeID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="WsirDbConnectionString (Settings)" DbObjectName="Solum.dbo.sol_Containers_SelectAllByTypeLookup" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="FillByType" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByType" GeneratorSourceName="FillByType" GetMethodModifier="Public" GetMethodName="GetDataByType" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByType" UserSourceName="FillByType">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="true">
                    <CommandText>sol_Containers_SelectAllByTypeLookup</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ContainerTypeId" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumn="ContainerTypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSetContainersLookup" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DataSetContainersLookup" msprop:Generator_UserDSName="DataSetContainersLookup">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="sol_Containers" msprop:Generator_TableClassName="sol_ContainersDataTable" msprop:Generator_RowEvArgName="sol_ContainersRowChangeEvent" msprop:Generator_TableVarName="tablesol_Containers" msprop:Generator_TablePropName="sol_Containers" msprop:Generator_RowDeletingName="sol_ContainersRowDeleting" msprop:Generator_UserTableName="sol_Containers" msprop:Generator_RowChangingName="sol_ContainersRowChanging" msprop:Generator_RowDeletedName="sol_ContainersRowDeleted" msprop:Generator_RowChangedName="sol_ContainersRowChanged" msprop:Generator_RowEvHandlerName="sol_ContainersRowChangeEventHandler" msprop:Generator_RowClassName="sol_ContainersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ContainerID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnContainerID" msprop:Generator_ColumnPropNameInRow="ContainerID" msprop:Generator_ColumnPropNameInTable="ContainerIDColumn" msprop:Generator_UserColumnName="ContainerID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ContainerTypeID" msprop:Generator_ColumnVarNameInTable="columnContainerTypeID" msprop:Generator_ColumnPropNameInRow="ContainerTypeID" msprop:Generator_ColumnPropNameInTable="ContainerTypeIDColumn" msprop:Generator_UserColumnName="ContainerTypeID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:sol_Containers" />
      <xs:field xpath="mstns:ContainerID" />
    </xs:unique>
  </xs:element>
</xs:schema>